# Generated by Django 4.2 on 2024-10-16 21:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('linkedin_profile', models.URLField(blank=True, verbose_name='LinkedIn Profile')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('location', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=255, verbose_name='Job Title')),
                ('company', models.CharField(max_length=255, verbose_name='Company Name')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=255, verbose_name='Skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_skills', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SoftSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=255, verbose_name='Skill Group')),
                ('short_description', models.TextField(verbose_name='Description')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soft_skills', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255, verbose_name='Project Name')),
                ('live_link', models.URLField(blank=True, verbose_name='Live Link')),
                ('github_link', models.URLField(blank=True, verbose_name='GitHub Link')),
                ('description', models.TextField(verbose_name='Project Description')),
                ('skills', models.ManyToManyField(blank=True, to='cv.technicalskill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Profile Description')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobBulletPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jbp', models.TextField(verbose_name='Description')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bullet_points', to='cv.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_bullet_points', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HackathonItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_month', models.DateField(verbose_name='Year/Month')),
                ('github_link', models.URLField(verbose_name='GitHub Link')),
                ('hosts', models.CharField(max_length=255, verbose_name='Host Organization')),
                ('competition_name', models.CharField(max_length=255, verbose_name='Competition Name')),
                ('role', models.CharField(max_length=255, verbose_name='Role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hackathon_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EducationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)], verbose_name='Start Year')),
                ('end_year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)], verbose_name='End Year')),
                ('school', models.CharField(max_length=255, verbose_name='School Name')),
                ('area_of_study', models.CharField(max_length=255, verbose_name='Area of Study')),
                ('result', models.CharField(max_length=100, verbose_name='Result')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_details', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cv.contactdetails')),
                ('education_items', models.ManyToManyField(blank=True, to='cv.educationitem')),
                ('hackathon_items', models.ManyToManyField(blank=True, to='cv.hackathonitem')),
                ('jobs', models.ManyToManyField(blank=True, to='cv.job')),
                ('personal_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cv.personalprofile')),
                ('projects', models.ManyToManyField(blank=True, to='cv.project')),
                ('soft_skills', models.ManyToManyField(blank=True, to='cv.softskill')),
                ('technical_skills', models.ManyToManyField(blank=True, to='cv.technicalskill')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cv', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='contactdetails',
            constraint=models.UniqueConstraint(fields=('user',), name='unique_contact_details_per_user'),
        ),
    ]
